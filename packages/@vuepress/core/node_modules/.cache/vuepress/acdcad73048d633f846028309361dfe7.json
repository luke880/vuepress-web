{"remainingRequest":"F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!F:\\workspace-jg\\middle-web\\vuepress\\packages\\@vuepress\\markdown-loader\\index.js??ref--1-2!F:\\workspace-jg\\middle-web\\vuepress\\packages\\docs\\docs\\en\\guide\\README.md?vue&type=template&id=120bd586&","dependencies":[{"path":"F:\\workspace-jg\\middle-web\\vuepress\\packages\\docs\\docs\\en\\guide\\README.md","mtime":1683625106719},{"path":"F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683601462315},{"path":"F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1683601463542},{"path":"F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683601462315},{"path":"F:\\workspace-jg\\middle-web\\vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":1683601463542},{"path":"F:\\workspace-jg\\middle-web\\vuepress\\packages\\@vuepress\\markdown-loader\\index.js","mtime":1683599833829}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}